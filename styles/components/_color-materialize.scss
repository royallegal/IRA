// ---- COLORS ---- //
$red: (
    "accent": #F44336,
    "light":  #ef5350,
    "base":   #D32F2F,
    "dark":   #B71C1C
);

$purple: (
    "accent": #d500f9,
    "light":  #ba68c8,
    "base":   #9c27b0,
    "dark":   #7b1fa2
);

$blue: (
    "accent": #00b0ff,
    "light":  #039be5,
    "base":   #0277bd,
    "dark":   #01579b,
);

$green: (
    "accent": #00E676,
    "light":  #66bb6a,
    "base":   #43a047,
    "dark":   #2e7d32
);

$yellow: (
    "accent": #ffff00,
    "light":  #ffee58,
    "base":   #ffd600,
    "dark":   #fbc02d
);

$orange: (
    "accent": #ff9100,
    "light":  #ffa726,
    "base":   #f57c00,
    "dark":   #e65100
);

$brown: (
    "accent": #8d6e63,
    "light":  #a1887f,
    "base":   #795548,
    "dark":   #5d4037
);

$gray: (
    "lighten-5": #fafafa,
    "lighten-4": #f5f5f5,
    "lighten-3": #eeeeee,
    "lighten-2": #e0e0e0,
    "lighten-1": #bdbdbd,
    "base":      #9e9e9e,
    "darken-1":  #757575,
    "darken-2":  #616161,
    "darken-3":  #424242,
    "darken-4":  #212121
);

$shades: (
    "transparent": transparent,
    "white":       #FFFFFF,
    "gray":        #e5e5e5,
    "black":       #000000
);

$colors: (
    "red": $red,
    "purple": $purple,
    "blue": $blue,
    "green": $green,
    "yellow": $yellow,
    "orange": $orange,
    "brown": $brown,
) !default;

$all_colors: (
    "red": $red,
    "purple": $purple,
    "blue": $blue,
    "green": $green,
    "yellow": $yellow,
    "orange": $orange,
    "brown": $brown,
    "gray": $gray,
    "shades": $shades
) !default;


// ---- TEXT COLORS ---- //
// Modify text color based on background lightness
@function dynamic_text_color($color) {
    @if (lightness($color) > 60) {
        @return rgba(0, 0, 0, 0.8);
    }
    @else {
        @return #FFF;
    }
}

// ---- COLOR CLASSES ---- //
// String name match
@function color_name($string, $find) {
    @if ($find == (str-slice($string, 0, str-length($find)))) {
        @return true;
    } @else {
        @return false;
    }
}

// Generates classes for background and text colors from basedon above variables
@each $color_name, $color in $colors {
    @each $color_type, $color_value in $color {
        // Base colors (ie ".blue")
        @if $color_type == "base" {
            .#{$color_name} {
                border-color: darken($color_value, 2.5%);
                background-color: $color_value;
                @if color_name($color_name, "yellow") == true {
                    color: rgba(0, 0, 0, 0.8);
                }
                @else {
                    color: dynamic_text_color($color_value);
                }

                // Button Hover States
                &.button {
                    &:hover {
                        color: dynamic_text_color($color_value);
                        &.yellow {
                            color: rgba(0,0,0,.8);
                        }
                        &.hollow {
                            border-color: $color_value;
                            background-color: transparent;
                            color: $color_value;
                        }
                        &.to-blue {
                            border-color: #00b0ff !important;
                            background-color: #00b0ff !important;
                            color: white !important;
                        }
                        &.to-white {
                            border-color: white !important;
                            background-color: white !important;
                            color: $color_value !important;
                        }
                    }

                    // Gradients & Mixes
                    &.gradient,
                    &.mix {
                        transition: none;
                        &:hover {
                            border: 2px solid $color_value;
                            background: white;
                            color: $color_value;
                        }
                    }

                    // Ghost Buttons
                    &.ghost {
                        border-color: $color_value;
                        color: $color_value;
                        &:hover {
                            border-color: darken($color_value, 2.5%);
                            background: $color_value;
                            color: white;
                        }
                    }
                }
            }

            // Text
            .#{$color_name}-text {
                color: $color_value;
            }
        }

        // Color variants (ie ".blue.lightest")
        @else {
            .#{$color_name}.#{$color_type} {
                border-color: darken($color_value, 2.5%);
                background-color: $color_value;
                @if color_name($color_name, "yellow") == true {
                    color: rgba(0, 0, 0, 0.8);
                }
                @else {
                    color: dynamic_text_color($color_value);
                }
            }
            .#{$color_name}-text.text-#{$color_type} {
                color: $color_value;
            }
        }
    }
}

// Shade classes
@each $color, $color_value in $shades {
    .#{$color} {
        border-color: $color_value;
        background-color: $color_value;
        color: dynamic_text_color($color_value);
        &.button {
            &:hover {
                border-color: #00b0ff;
                background-color: #00b0ff;
                color: white;
            }
            &.ghost {
                border-color: $color_value;
                background-color: transparent;
                color: $color_value;
                &:hover {
                    border-color: $color_value;
                    background-color: $color_value;
                    color: rgba(0,0,0,.8);
                    &.blue-text {
                        color: #00b0ff
                    }
                }
            }
            &:hover,
            &.ghost:hover {
                &.to-blue {
                    border-color: #00b0ff;
                    background-color: #00b0ff;
                    color: white;
                }
                &.to-white {
                    border-color: white;
                    background-color: white;
                    color: rgba(0,0,0,.8);
                }
            }
        }
    }
    .#{$color}-text {
        color: $color_value;
    }
}

// usage: color("name_of_color", "type_of_color")
// to avoid to repeating map-get($colors, ...)
@function color($color, $type) {
    @if map-has-key($all_colors, $color) {
        $curr_color: map-get($all_colors, $color);
        @if map-has-key($curr_color, $type) {
            @return map-get($curr_color, $type);
        }
    }
    @warn "Unknown `#{$color}` - `#{$type}` in $colors.";
    @return null;
}
